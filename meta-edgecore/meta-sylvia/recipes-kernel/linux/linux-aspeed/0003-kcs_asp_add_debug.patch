diff --git a/drivers/char/ipmi/kcs_bmc.c b/drivers/char/ipmi/kcs_bmc.c
index e6124bd548df..5ba391507fd5 100644
--- a/drivers/char/ipmi/kcs_bmc.c
+++ b/drivers/char/ipmi/kcs_bmc.c
@@ -16,6 +16,14 @@
 
 #include "kcs_bmc.h"
 
+#define CONFIG_KCS_DEBUG
+
+#ifdef CONFIG_KCS_DEBUG
+#define KCS_DBG(fmt, args...) printk( "%s() " fmt,__FUNCTION__, ## args)
+#else
+#define KCS_DBG(fmt, args...)
+#endif
+
 #define DEVICE_NAME "ipmi-kcs"
 
 #define KCS_MSG_BUFSIZ    1000
@@ -214,6 +222,7 @@ int kcs_bmc_handle_event(struct kcs_bmc *kcs_bmc)
 	unsigned long flags;
 	int ret = -ENODATA;
 	u8 status;
+	static int kcs_atn_flag = 0;
 
 	spin_lock_irqsave(&kcs_bmc->lock, flags);
 
@@ -228,6 +237,18 @@ int kcs_bmc_handle_event(struct kcs_bmc *kcs_bmc)
 
 		ret = 0;
 	}
+	if (status & KCS_STATUS_SMS_ATN) {
+		if( !kcs_atn_flag ){
+			kcs_atn_flag = 1;
+			KCS_DBG(" LPC_STR_ATN on ..\n");
+		}
+	}
+	else{
+		if( kcs_atn_flag ){
+			kcs_atn_flag = 0;
+			KCS_DBG(" LPC_STR_ATN off ..\n");
+		}
+	}
 
 	spin_unlock_irqrestore(&kcs_bmc->lock, flags);
 
